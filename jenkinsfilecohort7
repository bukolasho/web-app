pipeline{
  agent any
  tools{
    maven "maven3.8.4"
      }
     try {
  stages{
    stage("1.CodeClone"){
      steps{
        git credentialsId: 'Github-Cred', url: 'https://github.com/bukolasho/web-app.git'
      }
    }
    stage("2.Build"){
      steps{
        sh "mvn clean package"
      }
    }
    stage("3.CodeQuality"){
      steps{
        sh "mvn sonar:sonar"
      }
    }
    stage("4.Artifacts"){
      steps{
        sh "mvn deploy"
      }
    }
    stage("5.DeploytoUAT"){
      steps{
        deploy adapters: [tomcat9(credentialsId: 'tomcat-cred', path: '', url: 'http://172.31.29.167:8080/')], contextPath: null, war: 'target/*.war'
      }
    }
    stage("6.Approval"){
      steps{
        timeout(time:5, unit:'DAYS'){
        input message: 'Approval for Production'
      }
    }
  }
    stage("7.deploytoPROD"){
      steps{
        deploy adapters: [tomcat9(credentialsId: 'tomcat-cred', path: '', url: 'http://172.31.29.167:8080/')], contextPath: null, war: 'target/*.war'
      }
    }
    stage("8.EmailNotification"){
      steps{
        emailext body: 'This is Build Success', subject: 'Build Success', to: 'sobowaleoluwabukola@gmail.com'
  }
  }
  catch (e) {
        // If there was an exception thrown, the build failed
        currentBuild.result = "FAILED"
        throw e
    }finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)     
      }   
    }
  }
}
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
  // Send notifications
  slackSend (color: colorCode, message: summary)
}
